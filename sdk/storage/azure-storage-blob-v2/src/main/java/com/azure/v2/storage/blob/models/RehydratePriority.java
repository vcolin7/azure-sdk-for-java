// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.v2.storage.blob.models;

import io.clientcore.core.utils.ExpandableEnum;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Map;
import java.util.Objects;
import java.util.concurrent.ConcurrentHashMap;
import java.util.function.Function;

/**
 * If an object is in rehydrate pending state then this header is returned with priority of rehydrate. Valid values are
 * High and Standard.
 */
public final class RehydratePriority implements ExpandableEnum<String> {
    private static final Map<String, RehydratePriority> VALUES = new ConcurrentHashMap<>();

    private static final Function<String, RehydratePriority> NEW_INSTANCE = RehydratePriority::new;

    /**
     * Static value High for RehydratePriority.
     */
    public static final RehydratePriority HIGH = fromValue("High");

    /**
     * Static value Standard for RehydratePriority.
     */
    public static final RehydratePriority STANDARD = fromValue("Standard");

    private final String value;

    private RehydratePriority(String value) {
        this.value = value;
    }

    /**
     * Creates or finds a RehydratePriority.
     * 
     * @param value a value to look for.
     * @return the corresponding RehydratePriority.
     * @throws IllegalArgumentException if value is null.
     */
    public static RehydratePriority fromValue(String value) {
        if (value == null) {
            throw new IllegalArgumentException("'value' cannot be null.");
        }
        return VALUES.computeIfAbsent(value, NEW_INSTANCE);
    }

    /**
     * Gets known RehydratePriority values.
     * 
     * @return Known RehydratePriority values.
     */
    public static Collection<RehydratePriority> values() {
        return new ArrayList<>(VALUES.values());
    }

    /**
     * Gets the value of the RehydratePriority instance.
     * 
     * @return the value of the RehydratePriority instance.
     */
    @Override
    public String getValue() {
        return this.value;
    }

    @Override
    public String toString() {
        return Objects.toString(this.value);
    }

    @Override
    public boolean equals(Object obj) {
        return this == obj;
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(this.value);
    }
}
